/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyToken, MyTokenInterface } from "../MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b81525081600090816200005f91906200011c565b5060016200006e82826200011c565b505050620001e8565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a257607f821691505b602082108103620000c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011757600081815260208120601f850160051c81016020861015620000f25750805b601f850160051c820191505b818110156200011357828155600101620000fe565b5050505b505050565b81516001600160401b0381111562000138576200013862000077565b62000150816200014984546200008d565b84620000c9565b602080601f8311600181146200018857600084156200016f5750858301515b600019600386901b1c1916600185901b17855562000113565b600085815260208120601f198616915b82811015620001b95788860151825594840194600190910190840162000198565b5085821015620001d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61109d80620001f86000396000f3fe6080604052600436106100e85760003560e01c806342842e0e1161008a578063a22cb46511610059578063a22cb46514610261578063b88d4fde14610281578063c87b56dd146102a1578063e985e9c5146102c157600080fd5b806342842e0e146101de5780636352211e146101fe57806370a082311461021e57806395d89b411461024c57600080fd5b8063095ea7b3116100c6578063095ea7b31461017c57806323b872dd1461019e5780633a4b66f11461019c57806340d097c3146101be57600080fd5b806301ffc9a7146100ed57806306fdde0314610122578063081812fc14610144575b600080fd5b3480156100f957600080fd5b5061010d610108366004610ce6565b6102e1565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b50610137610333565b6040516101199190610d53565b34801561015057600080fd5b5061016461015f366004610d66565b6103c5565b6040516001600160a01b039091168152602001610119565b34801561018857600080fd5b5061019c610197366004610d9b565b6103ee565b005b3480156101aa57600080fd5b5061019c6101b9366004610dc5565b6103fd565b3480156101ca57600080fd5b5061019c6101d9366004610e01565b61048d565b3480156101ea57600080fd5b5061019c6101f9366004610dc5565b6104ae565b34801561020a57600080fd5b50610164610219366004610d66565b6104ce565b34801561022a57600080fd5b5061023e610239366004610e01565b6104d9565b604051908152602001610119565b34801561025857600080fd5b50610137610521565b34801561026d57600080fd5b5061019c61027c366004610e1c565b610530565b34801561028d57600080fd5b5061019c61029c366004610e6e565b61053b565b3480156102ad57600080fd5b506101376102bc366004610d66565b610552565b3480156102cd57600080fd5b5061010d6102dc366004610f4a565b6105c7565b60006001600160e01b031982166380ac58cd60e01b148061031257506001600160e01b03198216635b5e139f60e01b145b8061032d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461034290610f7d565b80601f016020809104026020016040519081016040528092919081815260200182805461036e90610f7d565b80156103bb5780601f10610390576101008083540402835291602001916103bb565b820191906000526020600020905b81548152906001019060200180831161039e57829003601f168201915b5050505050905090565b60006103d0826105f5565b506000828152600460205260409020546001600160a01b031661032d565b6103f982823361062e565b5050565b6001600160a01b03821661042c57604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061043983833361063b565b9050836001600160a01b0316816001600160a01b031614610487576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610423565b50505050565b600680546000918261049e83610fb7565b9190505590506103f98282610734565b6104c98383836040518060200160405280600081525061053b565b505050565b600061032d826105f5565b60006001600160a01b038216610505576040516322718ad960e21b815260006004820152602401610423565b506001600160a01b031660009081526003602052604090205490565b60606001805461034290610f7d565b6103f933838361074e565b6105468484846103fd565b610487848484846107ed565b606061055d826105f5565b50600061057560408051602081019091526000815290565b9050600081511161059557604051806020016040528060008152506105c0565b8061059f84610916565b6040516020016105b0929190610fde565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260408120546001600160a01b03168061032d57604051637e27328960e01b815260048101849052602401610423565b6104c983838360016109a9565b6000828152600260205260408120546001600160a01b039081169083161561066857610668818486610aaf565b6001600160a01b038116156106a6576106856000856000806109a9565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156106d5576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6103f9828260405180602001604052806000815250610b13565b6001600160a01b03821661078057604051630b61174360e31b81526001600160a01b0383166004820152602401610423565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561048757604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061082f90339088908790879060040161100d565b6020604051808303816000875af192505050801561086a575060408051601f3d908101601f191682019092526108679181019061104a565b60015b6108d3573d808015610898576040519150601f19603f3d011682016040523d82523d6000602084013e61089d565b606091505b5080516000036108cb57604051633250574960e11b81526001600160a01b0385166004820152602401610423565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461090f57604051633250574960e11b81526001600160a01b0385166004820152602401610423565b5050505050565b6060600061092383610b2a565b600101905060008167ffffffffffffffff81111561094357610943610e58565b6040519080825280601f01601f19166020018201604052801561096d576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461097757509392505050565b80806109bd57506001600160a01b03821615155b15610a7f5760006109cd846105f5565b90506001600160a01b038316158015906109f95750826001600160a01b0316816001600160a01b031614155b8015610a0c5750610a0a81846105c7565b155b15610a355760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610423565b8115610a7d5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610aba838383610c02565b6104c9576001600160a01b038316610ae857604051637e27328960e01b815260048101829052602401610423565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610423565b610b1d8383610c68565b6104c960008484846107ed565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610b695772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610b95576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610bb357662386f26fc10000830492506010015b6305f5e1008310610bcb576305f5e100830492506008015b6127108310610bdf57612710830492506004015b60648310610bf1576064830492506002015b600a831061032d5760010192915050565b60006001600160a01b03831615801590610c605750826001600160a01b0316846001600160a01b03161480610c3c5750610c3c84846105c7565b80610c6057506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610c9257604051633250574960e11b815260006004820152602401610423565b6000610ca08383600061063b565b90506001600160a01b038116156104c9576040516339e3563760e11b815260006004820152602401610423565b6001600160e01b031981168114610ce357600080fd5b50565b600060208284031215610cf857600080fd5b81356105c081610ccd565b60005b83811015610d1e578181015183820152602001610d06565b50506000910152565b60008151808452610d3f816020860160208601610d03565b601f01601f19169290920160200192915050565b6020815260006105c06020830184610d27565b600060208284031215610d7857600080fd5b5035919050565b80356001600160a01b0381168114610d9657600080fd5b919050565b60008060408385031215610dae57600080fd5b610db783610d7f565b946020939093013593505050565b600080600060608486031215610dda57600080fd5b610de384610d7f565b9250610df160208501610d7f565b9150604084013590509250925092565b600060208284031215610e1357600080fd5b6105c082610d7f565b60008060408385031215610e2f57600080fd5b610e3883610d7f565b915060208301358015158114610e4d57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610e8457600080fd5b610e8d85610d7f565b9350610e9b60208601610d7f565b925060408501359150606085013567ffffffffffffffff80821115610ebf57600080fd5b818701915087601f830112610ed357600080fd5b813581811115610ee557610ee5610e58565b604051601f8201601f19908116603f01168101908382118183101715610f0d57610f0d610e58565b816040528281528a6020848701011115610f2657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610f5d57600080fd5b610f6683610d7f565b9150610f7460208401610d7f565b90509250929050565b600181811c90821680610f9157607f821691505b602082108103610fb157634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201610fd757634e487b7160e01b600052601160045260246000fd5b5060010190565b60008351610ff0818460208801610d03565b835190830190611004818360208801610d03565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061104090830184610d27565b9695505050505050565b60006020828403121561105c57600080fd5b81516105c081610ccd56fea2646970667358221220fc714bedeb504d767b6c3ac9841fa89b0506b3dd6365fc0a0819530bbbbbc99e64736f6c63430008140033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MyToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyToken> {
    return super.deploy(overrides || {}) as Promise<MyToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }
  static readonly contractName: "MyToken";
  public readonly contractName: "MyToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
